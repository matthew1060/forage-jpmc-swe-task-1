From 247da0f805678557e57ad79f598a04263c9ecbd0 Mon Sep 17 00:00:00 2001
From: Matthew Mitchell Dgama <mdgama@student.unimelb.edu.au>
Date: Tue, 9 Apr 2024 17:11:20 +0530
Subject: [PATCH 1/2] fixed getDataPoint, getRatio and main methods

---
 client3.py | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..281f594 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if(price_b == 0):
+        return 
+    return price_a/price_b
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
-- 
2.28.0.windows.1


From 57d33f839b29b52912560a23ea6ce38fcfc06664 Mon Sep 17 00:00:00 2001
From: Matthew Mitchell Dgama <mdgama@student.unimelb.edu.au>
Date: Tue, 9 Apr 2024 18:05:01 +0530
Subject: [PATCH 2/2] added tests for getRatio and getDataPoint

---
 client_test.py | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/client_test.py b/client_test.py
index af2bf26..20001d8 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
 from client3 import getDataPoint
+from client3 import getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +9,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+       self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +18,21 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+       self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_PriceAZero(self):
+     price_a = 0
+     price_b = 121.2
+     self.assertEqual(getRatio(price_a, price_b), 0)
+  
+  def test_getRatio_PriceBZero(self):
+     price_a = 121.2
+     price_b = 0
+     self.assertIsNone(getRatio(price_a, price_b))
+  
 
 
 
-- 
2.28.0.windows.1

